import { BosonConfigurator } from "node_modules/@bosonprotocol/boson-dcl/dcl-edit/bosonConfigurator"
import { BosonProduct } from "node_modules/@bosonprotocol/boson-dcl/dcl-edit/bosonProduct"
export type DceScene = {
    /**
     * The root entity of the scene. All entities in this scene are children of either this scene root entity, or of another entity in the scene
     */
    sceneRoot: DceEntity

    /**
     * Shows the scene with all its entities. Shortcut for `sceneRoot.show()`
     */
    show: () => void;

    /**
     * Hides the scene with all its entities. Shortcut for `sceneRoot.hide()`
     */
    hide: () => void
}

export type DceEntity = {
    /**
     * The Decentraland entity
     */
    entity: Entity

    /**
     * The Transform component of the entity. Although, it is not required by Decentraland, every DceEntity will have a Transform added
     */
    transform: Transform

    /**
     * Show this entity and all its children. This calls `engine.addEntity(entity)` internally.
     */
    show: () => void

    /**
     * Hide this entity and all its children. This calls `engine.removeEntity(entity)` internally.
     */
    hide: () => void
}



//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

export type WithBosonConfigurator = {
    bosonConfigurator: BosonConfigurator
}

export type WithGLTFShape = {
    gLTFShape: GLTFShape
}

export type WithBosonProduct = {
    bosonProduct: BosonProduct
}

export type BosonScene = DceScene & {
    exposed: {
    }
}


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

export class SceneFactory {
    /**
     * Creates a new instance of the scene BosonScene
     * @param rootEntity specify a root entity for the newly created scene. If null, a new Entity will be generated as the root
     */
    static createBosonScene(rootEntity: Entity | null = null): BosonScene {
        if (rootEntity == null) {
            rootEntity = new Entity()
            const rootEntityTrans = new Transform()
            rootEntity.addComponent(rootEntityTrans)
        } else {
            if (!rootEntity.hasComponent(Transform)) {
                rootEntity.addComponent(new Transform)
            }
        }


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_BosonConfigurator1 = new Entity("BosonConfigurator")
        const ent4_BosonConfigurator1Transform = new Transform()
        ent4_BosonConfigurator1Transform.position = new Vector3(0, 0, 0)
        ent4_BosonConfigurator1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_BosonConfigurator1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_BosonConfigurator1Transform && typeof ent4_BosonConfigurator1Transform.init === "function")
        {
            ent4_BosonConfigurator1Transform.init(ent4_BosonConfigurator1)
        }
        ent4_BosonConfigurator1.addComponent(ent4_BosonConfigurator1Transform)
        const ent4_BosonConfigurator1BosonConfigurator = new BosonConfigurator()
        ent4_BosonConfigurator1BosonConfigurator.envName = "production"
        ent4_BosonConfigurator1BosonConfigurator.configId = "production-137-0"
        ent4_BosonConfigurator1BosonConfigurator.providerUrl = "https://polygon-mainnet.infura.io/v3/faa208f0a9d24b6b9eac43ae0fa72140"
        ent4_BosonConfigurator1BosonConfigurator.biconomyConfig = "{'apiKey':'<project-api-key>','apiIds':{'protocol':{'method':'executeMetaTransaction','apiId':'<project-protocol-api-id>'},'tokens':[{'name':'boson','address':'0x9B3B0703D392321AD24338Ff1f846650437A43C9','method':'executeMetaTransaction','apiId':'<project-boson-token-api-id>'},{'name':'weth','address':'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619','method':'executeMetaTransaction','apiId':'<project-weth-token-api-id>'},{'name':'usdc','address':'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174','method':'executeMetaTransaction','apiId':'<project-usdc-token-api-id>'},{'name':'dai','address':'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063','method':'executeMetaTransaction','apiId':'<project-dai-token-api-id>'},{'name':'usdt','address':'0xc2132D05D31c914a87C6611C10748AEb04B58e8F','method':'executeMetaTransaction','apiId':'<project-usdt-token-api-id>'}]}}"
        ent4_BosonConfigurator1BosonConfigurator.envName_test = "staging"
        ent4_BosonConfigurator1BosonConfigurator.configId_test = "staging-80001-0"
        ent4_BosonConfigurator1BosonConfigurator.providerUrl_test = "https://polygon-mumbai.infura.io/v3/faa208f0a9d24b6b9eac43ae0fa72140"
        ent4_BosonConfigurator1BosonConfigurator.biconomyConfig_test = "{'apiKey':'-zIIdi_LF.27130c33-e2c6-4cd8-9419-fb053c4963cf','apiIds':{'protocol':{'method':'executeMetaTransaction','apiId':'fc2b3fb0-ae4b-405e-970e-ddcb0643350a'},'tokens':[{'name':'boson','address':'0x1f5431e8679630790e8eba3a9b41d1bb4d41aed0','method':'executeMetaTransaction','apiId':'7ab660a5-e337-49d7-ad1b-fd688612c943'},{'name':'weth','address':'0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa','method':'executeMetaTransaction','apiId':'02e4ac0a-2437-47d0-9ac2-67c94f0e313f'},{'name':'usdc','address':'0xe6b8a5cf854791412c1f6efc7caf629f5df1c747','method':'executeMetaTransaction','apiId':'b57012d0-3437-4780-a05c-51d956fabf98'}]}}"
        if("init" in ent4_BosonConfigurator1BosonConfigurator && typeof ent4_BosonConfigurator1BosonConfigurator.init === "function")
        {
            ent4_BosonConfigurator1BosonConfigurator.init(ent4_BosonConfigurator1)
        }
        ent4_BosonConfigurator1.addComponent(ent4_BosonConfigurator1BosonConfigurator)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_BosonTEE_M_posed1 = new Entity("BosonTEE_M_posed")
        const ent4_BosonTEE_M_posed1Transform = new Transform()
        ent4_BosonTEE_M_posed1Transform.position = new Vector3(0.3634464, -0.708933, -0.06448527)
        ent4_BosonTEE_M_posed1Transform.rotation = new Quaternion(0, -0.9056979, 0, 0.4239243)
        ent4_BosonTEE_M_posed1Transform.scale = new Vector3(1.871954, 1.871954, 1.871954)
        if("init" in ent4_BosonTEE_M_posed1Transform && typeof ent4_BosonTEE_M_posed1Transform.init === "function")
        {
            ent4_BosonTEE_M_posed1Transform.init(ent4_BosonTEE_M_posed1)
        }
        ent4_BosonTEE_M_posed1.addComponent(ent4_BosonTEE_M_posed1Transform)
        const ent4_BosonTEE_M_posed1GLTFShape = new GLTFShape("assets/boson/BosonTEE_M_posed.glb")
        ent4_BosonTEE_M_posed1GLTFShape.visible = true
        ent4_BosonTEE_M_posed1GLTFShape.withCollisions = true
        ent4_BosonTEE_M_posed1GLTFShape.isPointerBlocker = true
        if("init" in ent4_BosonTEE_M_posed1GLTFShape && typeof ent4_BosonTEE_M_posed1GLTFShape.init === "function")
        {
            ent4_BosonTEE_M_posed1GLTFShape.init(ent4_BosonTEE_M_posed1)
        }
        ent4_BosonTEE_M_posed1.addComponent(ent4_BosonTEE_M_posed1GLTFShape)
        const ent4_BosonTEE_M_posed1BosonProduct = new BosonProduct()
        ent4_BosonTEE_M_posed1BosonProduct.productUUID = "0e4ea4-5f35-ca5-4e68-26d561ac13"
        ent4_BosonTEE_M_posed1BosonProduct.sellerId = "2"
        ent4_BosonTEE_M_posed1BosonProduct.productUUID_test = "3f27e-7d7-fab-4f12-8aebc147fa"
        ent4_BosonTEE_M_posed1BosonProduct.sellerId_test = "18"
        ent4_BosonTEE_M_posed1BosonProduct.panelPositionOffset = new Vector3(0, 0, 0)
        if("init" in ent4_BosonTEE_M_posed1BosonProduct && typeof ent4_BosonTEE_M_posed1BosonProduct.init === "function")
        {
            ent4_BosonTEE_M_posed1BosonProduct.init(ent4_BosonTEE_M_posed1)
        }
        ent4_BosonTEE_M_posed1.addComponent(ent4_BosonTEE_M_posed1BosonProduct)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_CouchThreeSeater1 = new Entity("Couch - Three Seater")
        const ent4_CouchThreeSeater1Transform = new Transform()
        ent4_CouchThreeSeater1Transform.position = new Vector3(8.607734, 0.05, 9.331486)
        ent4_CouchThreeSeater1Transform.rotation = new Quaternion(0, -0.9181, 0, 0.3963489)
        ent4_CouchThreeSeater1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_CouchThreeSeater1Transform && typeof ent4_CouchThreeSeater1Transform.init === "function")
        {
            ent4_CouchThreeSeater1Transform.init(ent4_CouchThreeSeater1)
        }
        ent4_CouchThreeSeater1.addComponent(ent4_CouchThreeSeater1Transform)
        const ent4_CouchThreeSeater1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/ThreeSeater_Couch.glb")
        ent4_CouchThreeSeater1GLTFShape.visible = true
        ent4_CouchThreeSeater1GLTFShape.withCollisions = true
        ent4_CouchThreeSeater1GLTFShape.isPointerBlocker = true
        if("init" in ent4_CouchThreeSeater1GLTFShape && typeof ent4_CouchThreeSeater1GLTFShape.init === "function")
        {
            ent4_CouchThreeSeater1GLTFShape.init(ent4_CouchThreeSeater1)
        }
        ent4_CouchThreeSeater1.addComponent(ent4_CouchThreeSeater1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_CrossTable1 = new Entity("Cross Table")
        const ent4_CrossTable1Transform = new Transform()
        ent4_CrossTable1Transform.position = new Vector3(6.830111, 0.05, 10.03575)
        ent4_CrossTable1Transform.rotation = new Quaternion(0, -0.3107142, 0, 0.9505034)
        ent4_CrossTable1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_CrossTable1Transform && typeof ent4_CrossTable1Transform.init === "function")
        {
            ent4_CrossTable1Transform.init(ent4_CrossTable1)
        }
        ent4_CrossTable1.addComponent(ent4_CrossTable1Transform)
        const ent4_CrossTable1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/CrossTable.glb")
        ent4_CrossTable1GLTFShape.visible = true
        ent4_CrossTable1GLTFShape.withCollisions = true
        ent4_CrossTable1GLTFShape.isPointerBlocker = true
        if("init" in ent4_CrossTable1GLTFShape && typeof ent4_CrossTable1GLTFShape.init === "function")
        {
            ent4_CrossTable1GLTFShape.init(ent4_CrossTable1)
        }
        ent4_CrossTable1.addComponent(ent4_CrossTable1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_FloorGlassSmall1 = new Entity("Floor - Glass Small")
        const ent4_FloorGlassSmall1Transform = new Transform()
        ent4_FloorGlassSmall1Transform.position = new Vector3(16, 0, 16)
        ent4_FloorGlassSmall1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_FloorGlassSmall1Transform.scale = new Vector3(8, 1, 8)
        if("init" in ent4_FloorGlassSmall1Transform && typeof ent4_FloorGlassSmall1Transform.init === "function")
        {
            ent4_FloorGlassSmall1Transform.init(ent4_FloorGlassSmall1)
        }
        ent4_FloorGlassSmall1.addComponent(ent4_FloorGlassSmall1Transform)
        const ent4_FloorGlassSmall1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/GlassFloor_Small.glb")
        ent4_FloorGlassSmall1GLTFShape.visible = true
        ent4_FloorGlassSmall1GLTFShape.withCollisions = true
        ent4_FloorGlassSmall1GLTFShape.isPointerBlocker = true
        if("init" in ent4_FloorGlassSmall1GLTFShape && typeof ent4_FloorGlassSmall1GLTFShape.init === "function")
        {
            ent4_FloorGlassSmall1GLTFShape.init(ent4_FloorGlassSmall1)
        }
        ent4_FloorGlassSmall1.addComponent(ent4_FloorGlassSmall1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_FloorHexagon1 = new Entity("Floor - Hexagon")
        const ent4_FloorHexagon1Transform = new Transform()
        ent4_FloorHexagon1Transform.position = new Vector3(13.6156, 0.05, 12.49903)
        ent4_FloorHexagon1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_FloorHexagon1Transform.scale = new Vector3(2.85, 1, 2.85)
        if("init" in ent4_FloorHexagon1Transform && typeof ent4_FloorHexagon1Transform.init === "function")
        {
            ent4_FloorHexagon1Transform.init(ent4_FloorHexagon1)
        }
        ent4_FloorHexagon1.addComponent(ent4_FloorHexagon1Transform)
        const ent4_FloorHexagon1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/HexagonFloor.glb")
        ent4_FloorHexagon1GLTFShape.visible = true
        ent4_FloorHexagon1GLTFShape.withCollisions = true
        ent4_FloorHexagon1GLTFShape.isPointerBlocker = true
        if("init" in ent4_FloorHexagon1GLTFShape && typeof ent4_FloorHexagon1GLTFShape.init === "function")
        {
            ent4_FloorHexagon1GLTFShape.init(ent4_FloorHexagon1)
        }
        ent4_FloorHexagon1.addComponent(ent4_FloorHexagon1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallCornerTurquoiseTile1 = new Entity("WallCorner - TurquoiseTile")
        const ent4_WallCornerTurquoiseTile1Transform = new Transform()
        ent4_WallCornerTurquoiseTile1Transform.position = new Vector3(14, 0.01, 12.90278)
        ent4_WallCornerTurquoiseTile1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallCornerTurquoiseTile1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallCornerTurquoiseTile1Transform && typeof ent4_WallCornerTurquoiseTile1Transform.init === "function")
        {
            ent4_WallCornerTurquoiseTile1Transform.init(ent4_WallCornerTurquoiseTile1)
        }
        ent4_WallCornerTurquoiseTile1.addComponent(ent4_WallCornerTurquoiseTile1Transform)
        const ent4_WallCornerTurquoiseTile1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileCorner.glb")
        ent4_WallCornerTurquoiseTile1GLTFShape.visible = true
        ent4_WallCornerTurquoiseTile1GLTFShape.withCollisions = true
        ent4_WallCornerTurquoiseTile1GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallCornerTurquoiseTile1GLTFShape && typeof ent4_WallCornerTurquoiseTile1GLTFShape.init === "function")
        {
            ent4_WallCornerTurquoiseTile1GLTFShape.init(ent4_WallCornerTurquoiseTile1)
        }
        ent4_WallCornerTurquoiseTile1.addComponent(ent4_WallCornerTurquoiseTile1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallCornerTurquoiseTile2 = new Entity("WallCorner - TurquoiseTile")
        const ent4_WallCornerTurquoiseTile2Transform = new Transform()
        ent4_WallCornerTurquoiseTile2Transform.position = new Vector3(14, 0.01, 1)
        ent4_WallCornerTurquoiseTile2Transform.rotation = new Quaternion(0, 0.7071068, 0, 0.7071068)
        ent4_WallCornerTurquoiseTile2Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallCornerTurquoiseTile2Transform && typeof ent4_WallCornerTurquoiseTile2Transform.init === "function")
        {
            ent4_WallCornerTurquoiseTile2Transform.init(ent4_WallCornerTurquoiseTile2)
        }
        ent4_WallCornerTurquoiseTile2.addComponent(ent4_WallCornerTurquoiseTile2Transform)
        const ent4_WallCornerTurquoiseTile2GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileCorner.glb")
        ent4_WallCornerTurquoiseTile2GLTFShape.visible = true
        ent4_WallCornerTurquoiseTile2GLTFShape.withCollisions = true
        ent4_WallCornerTurquoiseTile2GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallCornerTurquoiseTile2GLTFShape && typeof ent4_WallCornerTurquoiseTile2GLTFShape.init === "function")
        {
            ent4_WallCornerTurquoiseTile2GLTFShape.init(ent4_WallCornerTurquoiseTile2)
        }
        ent4_WallCornerTurquoiseTile2.addComponent(ent4_WallCornerTurquoiseTile2GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile1 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile1Transform = new Transform()
        ent4_WallTurquoiseTile1Transform.position = new Vector3(-8.010857, 7.450581E-09, 2.986704E-07)
        ent4_WallTurquoiseTile1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile1Transform && typeof ent4_WallTurquoiseTile1Transform.init === "function")
        {
            ent4_WallTurquoiseTile1Transform.init(ent4_WallTurquoiseTile1)
        }
        ent4_WallTurquoiseTile1.addComponent(ent4_WallTurquoiseTile1Transform)
        const ent4_WallTurquoiseTile1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile1GLTFShape.visible = true
        ent4_WallTurquoiseTile1GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile1GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile1GLTFShape && typeof ent4_WallTurquoiseTile1GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile1GLTFShape.init(ent4_WallTurquoiseTile1)
        }
        ent4_WallTurquoiseTile1.addComponent(ent4_WallTurquoiseTile1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile2 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile2Transform = new Transform()
        ent4_WallTurquoiseTile2Transform.position = new Vector3(-7.960436, 7.450581E-09, 0)
        ent4_WallTurquoiseTile2Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile2Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile2Transform && typeof ent4_WallTurquoiseTile2Transform.init === "function")
        {
            ent4_WallTurquoiseTile2Transform.init(ent4_WallTurquoiseTile2)
        }
        ent4_WallTurquoiseTile2.addComponent(ent4_WallTurquoiseTile2Transform)
        const ent4_WallTurquoiseTile2GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile2GLTFShape.visible = true
        ent4_WallTurquoiseTile2GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile2GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile2GLTFShape && typeof ent4_WallTurquoiseTile2GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile2GLTFShape.init(ent4_WallTurquoiseTile2)
        }
        ent4_WallTurquoiseTile2.addComponent(ent4_WallTurquoiseTile2GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile3 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile3Transform = new Transform()
        ent4_WallTurquoiseTile3Transform.position = new Vector3(-2, 7.450581E-09, 0)
        ent4_WallTurquoiseTile3Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile3Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile3Transform && typeof ent4_WallTurquoiseTile3Transform.init === "function")
        {
            ent4_WallTurquoiseTile3Transform.init(ent4_WallTurquoiseTile3)
        }
        ent4_WallTurquoiseTile3.addComponent(ent4_WallTurquoiseTile3Transform)
        const ent4_WallTurquoiseTile3GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile3GLTFShape.visible = true
        ent4_WallTurquoiseTile3GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile3GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile3GLTFShape && typeof ent4_WallTurquoiseTile3GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile3GLTFShape.init(ent4_WallTurquoiseTile3)
        }
        ent4_WallTurquoiseTile3.addComponent(ent4_WallTurquoiseTile3GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile4 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile4Transform = new Transform()
        ent4_WallTurquoiseTile4Transform.position = new Vector3(-6, 7.450581E-09, 0)
        ent4_WallTurquoiseTile4Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile4Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile4Transform && typeof ent4_WallTurquoiseTile4Transform.init === "function")
        {
            ent4_WallTurquoiseTile4Transform.init(ent4_WallTurquoiseTile4)
        }
        ent4_WallTurquoiseTile4.addComponent(ent4_WallTurquoiseTile4Transform)
        const ent4_WallTurquoiseTile4GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile4GLTFShape.visible = true
        ent4_WallTurquoiseTile4GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile4GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile4GLTFShape && typeof ent4_WallTurquoiseTile4GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile4GLTFShape.init(ent4_WallTurquoiseTile4)
        }
        ent4_WallTurquoiseTile4.addComponent(ent4_WallTurquoiseTile4GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile5 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile5Transform = new Transform()
        ent4_WallTurquoiseTile5Transform.position = new Vector3(-2, 7.450581E-09, 0)
        ent4_WallTurquoiseTile5Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile5Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile5Transform && typeof ent4_WallTurquoiseTile5Transform.init === "function")
        {
            ent4_WallTurquoiseTile5Transform.init(ent4_WallTurquoiseTile5)
        }
        ent4_WallTurquoiseTile5.addComponent(ent4_WallTurquoiseTile5Transform)
        const ent4_WallTurquoiseTile5GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile5GLTFShape.visible = true
        ent4_WallTurquoiseTile5GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile5GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile5GLTFShape && typeof ent4_WallTurquoiseTile5GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile5GLTFShape.init(ent4_WallTurquoiseTile5)
        }
        ent4_WallTurquoiseTile5.addComponent(ent4_WallTurquoiseTile5GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile6 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile6Transform = new Transform()
        ent4_WallTurquoiseTile6Transform.position = new Vector3(-9.943715, 7.450581E-09, 0)
        ent4_WallTurquoiseTile6Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile6Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile6Transform && typeof ent4_WallTurquoiseTile6Transform.init === "function")
        {
            ent4_WallTurquoiseTile6Transform.init(ent4_WallTurquoiseTile6)
        }
        ent4_WallTurquoiseTile6.addComponent(ent4_WallTurquoiseTile6Transform)
        const ent4_WallTurquoiseTile6GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile6GLTFShape.visible = true
        ent4_WallTurquoiseTile6GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile6GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile6GLTFShape && typeof ent4_WallTurquoiseTile6GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile6GLTFShape.init(ent4_WallTurquoiseTile6)
        }
        ent4_WallTurquoiseTile6.addComponent(ent4_WallTurquoiseTile6GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile7 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile7Transform = new Transform()
        ent4_WallTurquoiseTile7Transform.position = new Vector3(-4, 7.450581E-09, 0)
        ent4_WallTurquoiseTile7Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile7Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile7Transform && typeof ent4_WallTurquoiseTile7Transform.init === "function")
        {
            ent4_WallTurquoiseTile7Transform.init(ent4_WallTurquoiseTile7)
        }
        ent4_WallTurquoiseTile7.addComponent(ent4_WallTurquoiseTile7Transform)
        const ent4_WallTurquoiseTile7GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile7GLTFShape.visible = true
        ent4_WallTurquoiseTile7GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile7GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile7GLTFShape && typeof ent4_WallTurquoiseTile7GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile7GLTFShape.init(ent4_WallTurquoiseTile7)
        }
        ent4_WallTurquoiseTile7.addComponent(ent4_WallTurquoiseTile7GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile8 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile8Transform = new Transform()
        ent4_WallTurquoiseTile8Transform.position = new Vector3(-6, 7.450581E-09, 0)
        ent4_WallTurquoiseTile8Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile8Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile8Transform && typeof ent4_WallTurquoiseTile8Transform.init === "function")
        {
            ent4_WallTurquoiseTile8Transform.init(ent4_WallTurquoiseTile8)
        }
        ent4_WallTurquoiseTile8.addComponent(ent4_WallTurquoiseTile8Transform)
        const ent4_WallTurquoiseTile8GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile8GLTFShape.visible = true
        ent4_WallTurquoiseTile8GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile8GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile8GLTFShape && typeof ent4_WallTurquoiseTile8GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile8GLTFShape.init(ent4_WallTurquoiseTile8)
        }
        ent4_WallTurquoiseTile8.addComponent(ent4_WallTurquoiseTile8GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_WallTurquoiseTile9 = new Entity("Wall - TurquoiseTile")
        const ent4_WallTurquoiseTile9Transform = new Transform()
        ent4_WallTurquoiseTile9Transform.position = new Vector3(-4, 7.450581E-09, 0)
        ent4_WallTurquoiseTile9Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_WallTurquoiseTile9Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_WallTurquoiseTile9Transform && typeof ent4_WallTurquoiseTile9Transform.init === "function")
        {
            ent4_WallTurquoiseTile9Transform.init(ent4_WallTurquoiseTile9)
        }
        ent4_WallTurquoiseTile9.addComponent(ent4_WallTurquoiseTile9Transform)
        const ent4_WallTurquoiseTile9GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/TurquoiseTileWall.glb")
        ent4_WallTurquoiseTile9GLTFShape.visible = true
        ent4_WallTurquoiseTile9GLTFShape.withCollisions = true
        ent4_WallTurquoiseTile9GLTFShape.isPointerBlocker = true
        if("init" in ent4_WallTurquoiseTile9GLTFShape && typeof ent4_WallTurquoiseTile9GLTFShape.init === "function")
        {
            ent4_WallTurquoiseTile9GLTFShape.init(ent4_WallTurquoiseTile9)
        }
        ent4_WallTurquoiseTile9.addComponent(ent4_WallTurquoiseTile9GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        ent4_BosonConfigurator1.setParent(rootEntity)
        ent4_BosonTEE_M_posed1.setParent(ent4_CrossTable1)
        ent4_CouchThreeSeater1.setParent(rootEntity)
        ent4_CrossTable1.setParent(rootEntity)
        ent4_FloorGlassSmall1.setParent(rootEntity)
        ent4_FloorHexagon1.setParent(rootEntity)
        ent4_WallCornerTurquoiseTile1.setParent(rootEntity)
        ent4_WallCornerTurquoiseTile2.setParent(rootEntity)
        ent4_WallTurquoiseTile1.setParent(ent4_WallCornerTurquoiseTile2)
        ent4_WallTurquoiseTile2.setParent(ent4_WallCornerTurquoiseTile1)
        ent4_WallTurquoiseTile3.setParent(ent4_WallCornerTurquoiseTile1)
        ent4_WallTurquoiseTile4.setParent(ent4_WallCornerTurquoiseTile1)
        ent4_WallTurquoiseTile5.setParent(ent4_WallCornerTurquoiseTile2)
        ent4_WallTurquoiseTile6.setParent(ent4_WallCornerTurquoiseTile1)
        ent4_WallTurquoiseTile7.setParent(ent4_WallCornerTurquoiseTile2)
        ent4_WallTurquoiseTile8.setParent(ent4_WallCornerTurquoiseTile2)
        ent4_WallTurquoiseTile9.setParent(ent4_WallCornerTurquoiseTile1)

        engine.addEntity(rootEntity)

        return {
            sceneRoot: {
                entity: rootEntity,
                transform: rootEntity.getComponent(Transform),
                show() { engine.addEntity(this.entity) },
                hide() { engine.removeEntity(this.entity) }
            },
            exposed: {


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

            },

            show() { this.sceneRoot.show() },
            hide() { this.sceneRoot.hide() }
        }
    }


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

}
